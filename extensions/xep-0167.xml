<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Jingle Audio Content Description Format</title>
  <abstract>This document defines a content description format for Jingle audio sessions.</abstract>
  &LEGALNOTICE;
  <number>0167</number>
  <status>Experimental</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XEP-0166</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>TO BE ASSIGNED</shortname>
  &scottlu;
  &stpeter;
  &seanegan;
  <revision>
    <version>0.7</version>
    <date>2006-12-21</date>
    <initials>psa</initials>
    <remark><p>Modified spec to use provisional namespace before advancement to Draft (per XEP-0053).</p></remark>
  </revision>
  <revision>
    <version>0.6</version>
    <date>2006-10-31</date>
    <initials>psa/se</initials>
    <remark><p>Specified how to include SDP parameters and codec-specific parameters; clarified negotiation process; added Speex examples; removed queued info message.</p></remark>
  </revision>
  <revision>
    <version>0.5</version>
    <date>2006-08-23</date>
    <initials>psa</initials>
    <remark><p>Modified namespace to track XEP-0166.</p></remark>
  </revision>
  <revision>
    <version>0.4</version>
    <date>2006-07-12</date>
    <initials>se/psa</initials>
    <remark><p>Specified when to play received audio (early media); specified that DTMF must use in-band signalling (XEP-0181).</p></remark>
  </revision>
  <revision>
    <version>0.3</version>
    <date>2006-03-20</date>
    <initials>psa</initials>
    <remark><p>Defined info messages for hold and mute.</p></remark>
  </revision>
  <revision>
    <version>0.2</version>
    <date>2006-02-13</date>
    <initials>psa</initials>
    <remark><p>Defined info message for busy; added info message examples; recommended use of Speex; updated schema and XMPP Registrar considerations.</p></remark>
  </revision>
  <revision>
    <version>0.1</version>
    <date>2005-12-15</date>
    <initials>psa</initials>
    <remark><p>Initial version.</p></remark>
  </revision>
  <revision>
    <version>0.0.3</version>
    <date>2005-12-05</date>
    <initials>psa</initials>
    <remark><p>Described service discovery usage; defined initial informational messages.</p></remark>
  </revision>
  <revision>
    <version>0.0.2</version>
    <date>2005-10-27</date>
    <initials>psa</initials>
    <remark><p>Added SDP mapping, security considerations, IANA considerations, XMPP Registrar considerations, and XML schema.</p></remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2005-10-21</date>
    <initials>psa/sl</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>&xep0166; can be used to initiate and negotiate a wide range of peer-to-peer sessions. One session type of interest is audio (voice) chat. This document specifies a format for describing Jingle audio sessions.</p>
</section1>
<section1 topic='Requirements' anchor='reqs'>
  <p>The Jingle content description format defined herein is designed to meet the following requirements:</p>
  <ol>
    <li>Enable negotiation of parameters necessary for audio chat over Realtime Transport Protocol (RTP; see &rfc3550;).</li>
    <li>Map these parameters to Session Description Protocol (SDP; see &rfc4566;) to enable interoperability.</li>
    <li>Define informational messages related to audio chat (e.g., busy and ringing).</li>
  </ol>
</section1>
<section1 topic='Content Description Format' anchor='format'>
  <p>A Jingle audio session is described by one or more encodings contained within a wrapper &lt;description/&gt; element. In the language of <cite>RFC 4566</cite> these encodings are payload-types; therefore, each &lt;payload-type/&gt; element specifies an encoding that can be used for the audio stream. In Jingle Audio, these encodings are used in the context of RTP. The most common encodings for the Audio/Video Profile (AVP) of RTP are listed in &rfc3551; (these "static" types are reserved from payload ID 0 through payload ID 95), although other encodings are allowed (these "dynamic" types use payload IDs 96 to 127) in accordance with the dynamic assignment rules described in Section 3 of <cite>RFC 3551</cite>.</p>
  <p>The allowable attributes are as follows:</p>
  <table caption='Defined Attributes'>
    <tr>
      <th>Attribute</th>
      <th>Description</th>
      <th>Inclusion</th>
    </tr>
    <tr>
      <td>channels</td>
      <td>The number of channels; if omitted, it MUST be assumed to contain one channel</td>
      <td>RECOMMENDED</td>
    </tr>
    <tr>
      <td>clockrate</td>
      <td>The sampling frequency in Hertz</td>
      <td>RECOMMENDED</td>
    </tr>
    <tr>
      <td>id</td>
      <td>The payload identifier</td>
      <td>REQUIRED</td>
    </tr>
    <tr>
      <td>maxptime</td>
      <td>Maximum packet time as specified in RFC 4566</td>
      <td>OPTIONAL</td>
    </tr>
    <tr>
      <td>name</td>
      <td>The appropriate subtype of the audio MIME type</td>
      <td>RECOMMENDED for static payload types, REQUIRED for dynamic payload types</td>
    </tr>
    <tr>
      <td>ptime</td>
      <td>Packet time as specified in RFC 4566</td>
      <td>OPTIONAL</td>
    </tr>
  </table>
  <p>The encodings SHOULD be provided in order of preference.</p>
  <example caption="Audio Description Format"><![CDATA[
    <description xmlns='http://www.xmpp.org/extensions/xep-0167.html#ns'>
      <payload-type id='96' name='speex' clockrate='16000'/>
      <payload-type id='97' name='speex' clockrate='8000'/>
      <payload-type id='18' name='G729'/>
      <payload-type id='103' name='L16' clockrate='16000' channels='2'/>
      <payload-type id='98' name='x-ISAC' clockrate='8000'/>
      <payload-type id='102' name='iLBC'/>
      <payload-type id='4' name='G723'/>
      <payload-type id='0' name='PCMU' clockrate='16000'/>
      <payload-type id='8' name='PCMA'/>
      <payload-type id='13' name='CN'/>
    </description>
  ]]></example>
  <p>The &lt;description/&gt; element is intended to be a child of a &JINGLE; element as specified in <cite>XEP-0166</cite>. (See <link uurl='#ns'>Protocol Namespaces</link> regarding issuance of a permanent namespace.)</p>
  <p>Each &lt;payload-type/&gt; element MAY contain one or more child elements that specify particular parameters related to the payload. For example, as described in <cite>draft-ietf-avt-rtp-speex</cite> <note>This Internet-Draft has expired; see &lt;<link url='http://www.watersprings.org/pub/id/draft-ietf-avt-rtp-speex-00.txt'>http://www.watersprings.org/pub/id/draft-ietf-avt-rtp-speex-00.txt</link>&gt; for an archived version.</note>, the "ebw", "eng", "mode", "sr", and "vbr" parameters may be specified in relation to usage of the Speex <note>See &lt;<link url='http://www.speex.org/'>http://www.speex.org/</link>&gt;.</note> codec. Where such parameters are encoded via the "fmtp" SDP attribute, they shall be represented in Jingle via the following format:</p>
  <code><![CDATA[
<parameter name='foo' value='bar'/>
  ]]></code>
  <p>Note: The parameter names are effectively guaranteed to be unique, since &IANA; maintains a registry of SDP parameters (see &lt;<link url='http://www.iana.org/assignments/sdp-parameters'>http://www.iana.org/assignments/sdp-parameters</link>&gt;).</p>
</section1>
<section1 topic='Negotiating a Jingle-Audio Session' anchor='negotiating'>
  <p>Upon receiving a Jingle initiate stanza containing a Jingle Audio content description as defined in this document, a receiver iterates through the list of offered payload types, composing an appropriate Jingle Audio response description according to the following rules:</p>
  <ul>
    <li>If the receiver does not support the offered encoding, it MUST NOT include the encoding in its response.</li>
    <li>If the receiver does support the offered encoding, it SHOULD include the encoding in the response, preserving the offered payload type.</li>
    <li>If the receiver is unable to support the offered encoding with the offered payload type, it MAY provide an alternate payload type in its response. This typically will happen only when translating from other signalling protocols.</li>
    <li>The receiver SHOULD preserve the order of the offered encodings, which represents the priority assigned to them by the initator.</li>
  </ul>
  <p>If, after applying these rules, the receiver determines it does not support any of the offering encodings, the receiver MUST reject the session by sending a &lt;unsupported-codecs/&gt; error in response to the initiator's "initiate" action. Otherwise, it MUST provisionally accept the session by sending an empty IQ result. If the response content type differs from the one offered, the receiver MUST then propose the change in a "description-modify" action as defined in <cite>XEP-0166</cite>. If the description is identical, the receiver MUST send a "description-accept" action (either explicitly, or implicitly as part of a "session-accept" or "content-accept" action).</p>
  <p>Following is an example of this negotiation:</p>
  <example caption="Initiation Example"><![CDATA[
<iq to='juliet@capulet.com/balcony' from='romeo@montague.net/orchard' id='jingleaudio1' type='set'>
  <jingle xmlns='http://www.xmpp.org/extensions/xep-0166.html#ns'
          action='session-initiate'
          initiator='romeo@montague.net/orchard'
          sid='a73sjjvkla37jfea'>
    <content name='audio'>
      <description xmlns='http://www.xmpp.org/extensions/xep-0167.html#ns'>
        <payload-type id='96' name='speex' clockrate='16000'/>
        <payload-type id='0' name='PCMU'/>
      </description>
      <transport xmlns='http://www.xmpp.org/extensions/xep-0166.html#ns/transport/ice'>
        ...
      </transport>
    </content>
  </jingle>
</iq>
  ]]></example>
  <p>The receiver now follows the rules provided in this section and determines it can only support PCMU. It provisionally accepts the session:</p>
  <example caption="Receiver Provisionally Accepts Session"><![CDATA[
  <iq to='romeo@montague.net/orchard' from='juliet@capulet.com/balcony' id='jingleaudio1' type='result'/>
  ]]></example>
  <p>It then offers the new content description in a 'description-modify' action:</p>
  <example caption="Initiation Example"><![CDATA[
<iq to='romeo@montague.net/orchard' from='juliet@capulet.com/balcony' id='jingleaudio2' type='set'>
  <jingle xmlns='http://www.xmpp.org/extensions/xep-0166.html#ns'
          action='description-modify'
          initiator='romeo@montague.net/orchard'
          sid='a73sjjvkla37jfea'>
    <content name='audio'>
      <description xmlns='http://www.xmpp.org/extensions/xep-0167.html#ns'>
        <payload-type id='0' name='PCMU'/>
      </description>
    </content>
  </jingle>
</iq>
  ]]></example>
  <p>The initiator acknowledges the 'description-modify' with an empty IQ result, and sends a 'description-accept' to accept the new Jingle Audio content description.</p>
  <example caption="Initiator Accepts New Content Description"><![CDATA[
<iq to='juliet@capulet.com/balcony' from='romeo@montegue.net/orchard' id='jingleaudio2' type='result'/>

<iq to='juliet@capulet.com/balcony' from='romeo@montegue.net/orchard' id='jingleaudio3' type='set'/>
  <jingle xmlns='http://www.xmpp.org/extensions/xep-0166.html#ns'
   action='description-accept' initiator='romeo@montague.net/orchard' sid='a73sjjvkla37jfea'>
     <content name='audio'>
       <description xmlns='http://www.xmpp.org/extensions/xep-0167.html#ns'>
         <payload-type id='0' name='PCMU'/>
       </description>
     </content>
  </jingle>
</iq>
  ]]></example>
  <p>Finally, the target acknowledges the 'description-accept'.</p>
  <example caption="Receiver Provisionally Accepts Session"><![CDATA[
<iq to='romeo@montague.net/orchard' from='juliet@capulet.com/balcony' id='jingleaudio3' type='result'/>
  ]]></example>
</section1>
<section1 topic='Negotiating a Jingle-Audio Session' anchor='negotiating'>
  <p>Upon receiving a Jingle initiate stanza containing a Jingle Audio content description as defined in this document, a target entity iterates through the list of offered payload types, composing an appropriate Jingle Audio response description according to the following rules:</p>
  <ul>
    <li>If the target entity does not support the offered encoding, it MUST NOT include the encoding in its response.</li>
    <li>If the target entity does support the offered encoding, it SHOULD include encoding in the response, preseriving the offered payload type.</li>
    <li>If the target entity is unable to support the offered encoding with the offered payload type, it MAY provide an alternate payload type in its response. This typically will happen only when translating from other signalling protocols.</li>
    <li>The target entity SHOULD preserve the order of the offered encodings, which represents the priority assigned to them by the initator.</li>
  </ul>
  <p>If, after applying these rules, the target entity determines it does not support any of the offering encodings, the target entity MUST reject the session by sending a &lt;unsupported-codecs/&gt; error in response to the initiator's "initiate" message. Otherwise, it MUST provisionally accept the session by sending an empty IQ result. If the response content type differs from the one offered, the target entity MUST then propose the change in a "description-modify" message as defined in <cite>XEP-0166</cite>. If the description is identical, the target entity MUST send a "description-accept" message (either explictly, or implicitly as part of a "content-accept" message).</p>

  <p>Following is an example of this negotiation:</p>

  <example caption="Initiation Example"><![CDATA[
  <iq to='juliet@capulet.com/balcony' from='romeo@montague.net/orchard' id='jingleaudio1' type='set'>
    <jingle xmlns='http://jabber.org/protocol/jingle'
            action='session-initiate'
            initiator='romeo@montague.net/orchard'
            sid='a73sjjvkla37jfea'>
      <content name='audio'>
        <description xmlns='http://jabber.org/protocol/jingle/description/audio'>
          <payload-type id='96' name='speex' clockrate='16000'/>
          <payload-type id='0' name='PCMU' />
        </description>
        <transport xmlns='http://jabber.org/protocol/jingle/transport/ice'>
          ...
        </transport>
      </content>
    </jingle>
  </iq>
    ]]></example>

  <p>The target entity now follows the rules provided in this section and determines it can only support PCMU. It provisionally accepts the session:</p>

  <example caption="Target Provisionally Accepts Session"><![CDATA[
  <iq to='romeo@montague.net/orchard' from='juliet@capulet.com/balcony' id='jingleaudio1' type='result' />
  ]]></example>

  <p>It then offers the new content description in a 'description-modify' message:</p>

  <example caption="Initiation Example"><![CDATA[
  <iq to='romeo@montague.net/orchard' from='juliet@capulet.com/balcony' id='jingleaudio2' type='set'>
    <jingle xmlns='http://jabber.org/protocol/jingle'
            action='description-modify'
            initiator='romeo@montague.net/orchard'
            sid='a73sjjvkla37jfea'>
      <content name='audio'>
        <description xmlns='http://jabber.org/protocol/jingle/description/audio'>
          <payload-type id='0' name='PCMU' />
        </description> 
      </content>
    </jingle>
  </iq>
    ]]></example>

  <p>The initiator acknowledges the 'description-modify' with an empty IQ result, and sends a 'description-accept' to accept
     the new Jingle Audio content description.</p>

  <example caption="Initiator Accepts New Content Description"><![CDATA[
  <iq to='juliet@capulet.com/balcony' from='romeo@montegue.net/orchard' id='jingleaudio2' type='result' />

  <iq to='juliet@capulet.com/balcony' from='romeo@montegue.net/orchard' id='jingleaudio3' type='set' />
    <jingle xmlns='http://jabber.org/protocol/jingle'
     action='description-accept' initiator='romeo@montague.net/orchard' sid='a73sjjvkla37jfea'>
       <content name='audio'>
         <description xmlns='http://jabber.org/protocol/jingle/description/audio'>
           <payload-type id='0' name='PCMU' />
         </description>
       </content>
    </jingle>
  </iq>
  ]]></example>

  <p>Finally, the target acknowledges the 'description-accept'.</p>

  <example caption="Target Provisionally Accepts Session"><![CDATA[
  <iq to='romeo@montague.net/orchard' from='juliet@capulet.com/balcony' id='jingleaudio3' type='result' />
  ]]></example>

</section1>
<section1 topic='Mapping to Session Description Protocol' anchor='sdp'>
  <p>If the payload type is static (payload-type IDs 0 through 95 inclusive), it MUST be mapped to a media field defined in <cite>RFC 4566: Session Description Protocol</cite> (SDP). The generic format for the media field is as follows:</p>
  <code><![CDATA[
m=<media> <port> <transport> <fmt list>
  ]]></code>
  <p>In the context of Jingle audio sessions, the &lt;content&gt; is "audio", the &lt;port&gt; is the preferred port for such communications (which may be determined dynamically), the &lt;transport&gt; is whatever transport method is negotiated via the Jingle negotiation (e.g., "RTP/AVT"), and the &lt;fmt list&gt; is the payload-type ID.</p>
  <p>For example, consider the following static payload-type:</p>
  <example caption="Jingle Format for Static Payload-Type"><![CDATA[
<payload-type id="13" name="CN"/>
  ]]></example>
  <example caption="SDP Mapping of Static Payload-Type"><![CDATA[
m=audio 9999 RTP/AVP 13
  ]]></example>
  <p>If the payload type is dynamic (payload-type IDs 96 through 127 inclusive), it SHOULD be mapped to an SDP media field plus an SDP attribute field named "rtpmap".</p>
  <p>For example, consider a payload of 16-bit linear-encoded stereo audio sampled at 16KHz associated with dynamic payload-type 98:</p>
  <example caption="Jingle Format for Dynamic Payload-Type"><![CDATA[
<payload-type id='96' name='speex' clockrate='16000'/>
  ]]></example>
  <example caption="SDP Mapping of Dynamic Payload-Type"><![CDATA[
m=audio 9999 RTP/AVP 96
a=rtpmap:96 speex/16000
  ]]></example>
  <p>As noted, if additional parameters are to be specified, they shall be represented as attributes of the &lt;payload-type/&gt; element or of the child &lt;parameter/&gt; element, as in the following example.</p>
  <example caption="Jingle Format for Dynamic Payload-Type With Parameters"><![CDATA[
<payload-type id='96' name='speex' clockrate='16000' ptime='40'>
  <parameter name='vbr' value='on'/>
  <parameter name='cng' value='on'/>
</payload-type>
  ]]></example>
  <example caption="SDP Mapping of Dynamic Payload-Type With Parameters"><![CDATA[
m=audio 9999 RTP/AVP 96
a=rtpmap:96 speex/16000
a=ptime:40
a=fmtp:96 vbr=on;cng=on
  ]]></example>
</section1>
<section1 topic='Service Discovery' anchor='disco'>
  <p>If an entity supports the Jingle audio content description format, it MUST advertise that fact by returning a feature of "http://www.xmpp.org/extensions/xep-0167.html#ns" (see <link url='#ns'>Protocol Namespaces</link>) in response to &xep0030; information requests.</p>
  <example caption="Service Discovery Information Request"><![CDATA[
<iq from='romeo@montague.net/orchard'
    id='disco1'
    to='juliet@capulet.com/balcony'
    type='get'>
  <query xmlns='http://jabber.org/protocol/disco#info'/>
</iq>
  ]]></example>
  <example caption="Service Discovery Information Response"><![CDATA[
<iq from='juliet@capulet.com/balcony'
    id='disco1'
    to='romeo@montague.net/orchard'
    type='result'>
  <query xmlns='http://jabber.org/protocol/disco#info'>
    ...
    <feature var='http://www.xmpp.org/extensions/xep-0166.html#ns'/>
    <feature var='http://www.xmpp.org/extensions/xep-0167.html#ns'/>
    ...
  </query>
</iq>
  ]]></example>
</section1>
<section1 topic='Informational Messages' anchor='info'>
  <section2 topic='Format' anchor='info-format'>
    <p>Informational messages may be sent by either party within the context of Jingle to communicate the status of a Jingle audio session, device, or principal. The informational message MUST be an IQ-set containing a &JINGLE; element of type "description-info", where the informational message is a payload  element qualified by the 'http://www.xmpp.org/extensions/xep-0167.html#ns-info' namespace; the following payload elements are defined: <note>A &lt;trying/&gt; element (equivalent to the SIP 100 Trying response code) is not necessary, since each session-level action is acknowledged via XMPP IQ semantics.</note></p>
    <table caption='Information Payload Elements'>
      <tr>
        <th>Element</th>
        <th>Meaning</th>
      </tr>
      <tr>
        <td>&lt;busy/&gt;</td>
        <td>The principal or device is currently unavailable for a session because busy with another (audio or other) session.</td>
      </tr>
      <tr>
        <td>&lt;hold/&gt;</td>
        <td>The principal is temporarily pausing the chat (i.e., putting the other party on hold).</td>
      </tr>
      <tr>
        <td>&lt;mute/&gt;</td>
        <td>The principal is temporarily stopping audio input but continues to accept audio output.</td>
      </tr>
      <tr>
        <td>&lt;ringing/&gt;</td>
        <td>The device is ringing but the principal has not yet interacted with it to answer (maps to the SIP 180 response code).</td>
      </tr>
    </table>
    <p>Note: Because the informational message is sent in an IQ-set, the receiving party MUST return either an IQ-result or an IQ-error (normally only an IQ-result to acknowledge receipt; no error flows are defined or envisioned at this time).</p>
  </section2>
  <section2 topic='Examples' anchor='info-examples'>
    <example caption="Receiver Sends Busy Message"><![CDATA[
<iq from='juliet@capulet.com/balcony'
    to='romeo@montague.net/orchard'
    id='busy1'
    type='set'>
  <jingle xmlns='http://www.xmpp.org/extensions/xep-0166.html#ns'
          action='description-info'
          initiator='romeo@montague.net/orchard'
          sid='a73sjjvkla37jfea'>
    <busy xmlns='http://www.xmpp.org/extensions/xep-0167.html#ns-info'/>
  </jingle>
</iq>
    ]]></example>
    <example caption="Receiver Sends Hold Message"><![CDATA[
<iq from='juliet@capulet.com/balcony'
    to='romeo@montague.net/orchard'
    id='hold1'
    type='set'>
  <jingle xmlns='http://www.xmpp.org/extensions/xep-0166.html#ns'
          action='description-info'
          initiator='romeo@montague.net/orchard'
          sid='a73sjjvkla37jfea'>
    <hold xmlns='http://www.xmpp.org/extensions/xep-0167.html#ns-info'/>
  </jingle>
</iq>
    ]]></example>
    <example caption="Receiver Sends Mute Message"><![CDATA[
<iq from='juliet@capulet.com/balcony'
    to='romeo@montague.net/orchard'
    id='mute1'
    type='set'>
  <jingle xmlns='http://www.xmpp.org/extensions/xep-0166.html#ns'
          action='description-info'
          initiator='romeo@montague.net/orchard'
          sid='a73sjjvkla37jfea'>
    <mute xmlns='http://www.xmpp.org/extensions/xep-0167.html#ns-info'/>
  </jingle>
</iq>
    ]]></example>
    <example caption="Receiver Sends Ringing Message"><![CDATA[
<iq from='juliet@capulet.com/balcony'
    to='romeo@montague.net/orchard'
    id='ringing1'
    type='set'>
  <jingle xmlns='http://www.xmpp.org/extensions/xep-0166.html#ns'
          action='description-info'
          initiator='romeo@montague.net/orchard'
          sid='a73sjjvkla37jfea'>
    <ringing xmlns='http://www.xmpp.org/extensions/xep-0167.html#ns-info'/>
  </jingle>
</iq>
    ]]></example>
  </section2>
</section1>

<section1 topic='Error Handling' anchor='errors'>
The Jingle Audio-specific error conditions are as follows:
  <table caption='Other Error Conditions'>
    <tr>
      <th>Jingle Condition</th>
      <th>XMPP Condition</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>&lt;unsupported-codecs/&gt;</td>
      <td>&notacceptable;</td>
      <td>The recipient does not support any of the offered audio encodings.</td>
    </tr>
  </table>

</section1>

<section1 topic='Implementation Notes' anchor='impl'>
  <section2 topic='Codecs' anchor='impl-codecs'>
    <p>Support for the Speex codec is RECOMMENDED.</p>
  </section2>
  <section2 topic='DTMF' anchor='impl-dtmf'>
    <p>If it is necessary to send Dual Tone Multi-Frequency (DTMF) tones, it is REQUIRED to use the XML format specified &xep0181;.</p>
  </section2>
  <section2 topic='When to Listen' anchor='impl-listen'>
    <p>When the Jingle Audio content is accepted, either by a 'content-accept' action or a combination of 'description-accept' and 'transport-accept' actions, both receiving and sending entities SHOULD start listening for audio as defined by the negotiated transport method and audio description. For interoperability with telephony systems, each entity SHOULD both play any audio received and send a ringing tone, at this time, before the receiver sends a 'session-accept' action.</p>
  </section2>
</section1>

<section1 topic='Security Considerations' anchor='security'>
  <p>The description of a format for audio sessions introduces no known security vulnerabilities.</p>
</section1>

<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with &IANA;.</p>
</section1>

<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <section2 topic='Protocol Namespaces' anchor='ns'>
    <p>Until this specification advances to a status of Draft, its associated namespaces shall be "http://www.xmpp.org/extensions/xep-0167.html#ns" and "http://www.xmpp.org/extensions/xep-0167.html#ns-info"; upon advancement of this specification, the &REGISTRAR; shall issue permanent namespaces in accordance with the process defined in Section 4 of &xep0053;.</p>
  </section2>
  <section2 topic='Jingle Content Description Formats' anchor='registrar-content'>
    <p>The XMPP Registrar shall include "audio" in its registry of Jingle content description formats. The registry submission is as follows:</p>
    <code><![CDATA[
<content>
  <name>audio</name>
  <desc>Jingle sessions that support audio exchanges</desc>
  <doc>XEP-0167</doc>
</content>
    ]]></code>
  </section2>
</section1>

<section1 topic='XML Schemas' anchor='schema'>
  <section2 topic='Content Description Format' anchor='schema-content'>
    <code><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='http://www.xmpp.org/extensions/xep-0167.html#ns'
    xmlns='http://www.xmpp.org/extensions/xep-0167.html#ns'
    elementFormDefault='qualified'>

  <xs:element name='description'>
    <xs:complexType>
      <xs:sequence minOccurs='0' maxOccurs='unbounded'/>
        <xs:element ref='payload-type'/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name='payload-type'>
    <xs:complexType>
      <xs:sequence minOccurs='0' maxOccurs='unbounded'>
        <xs:element ref='parameter'/>
      </xs:choice>
      <xs:attribute name='channels' type='xs:byte' use='optional' default='1'/>
      <xs:attribute name='clockrate' type='xs:short' use='optional'/>
      <xs:attribute name='id' type='xs:unsignedByte' use='required'/>
      <xs:attribute name='maxptime' type='xs:short' use='optional'/>
      <xs:attribute name='name' type='xs:string' use='optional'/>
      <xs:attribute name='ptime' type='xs:short' use='optional'/>
    </xs:complexType>
  </xs:element>

  <xs:element name='parameter'>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base='empty'>
          <xs:attribute name='name' type='xs:string' use='required'/>
          <xs:attribute name='value' type='xs:string' use='required'/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <xs:simpleType name='empty'>
    <xs:restriction base='xs:string'>
      <xs:enumeration value=''/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
    ]]></code>
  </section2>
  <section2 topic='Informational Messages' anchor='schema-info'>
    <code><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='http://www.xmpp.org/extensions/xep-0167.html#ns-info'
    xmlns='http://www.xmpp.org/extensions/xep-0167.html#ns-info'
    elementFormDefault='qualified'>

  <xs:element name='busy' type='empty'/>
  <xs:element name='hold' type='empty'/>
  <xs:element name='mute' type='empty'/>
  <xs:element name='ringing' type='empty'/>

  <xs:simpleType name='empty'>
    <xs:restriction base='xs:string'>
      <xs:enumeration value=''/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
    ]]></code>
  </section2>
</section1>
</xep>
