<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Jingle Audio Content Description Format</title>
  <abstract>This document defines a content description format for Jingle audio sessions.</abstract>
  &LEGALNOTICE;
  <number>0167</number>
  <status>Experimental</status>
  <type>Standards Track</type>
  <jig>Standards JIG</jig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XEP-0166</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>jingle-audio</shortname>
  &scottlu;
  &stpeter;
  &seanegan;
  <revision>
    <version>0.5</version>
    <date>2006-08-23</date>
    <initials>psa</initials>
    <remark><p>Modified namespace to track XEP-0166.</p></remark>
  </revision>
  <revision>
    <version>0.4</version>
    <date>2006-07-12</date>
    <initials>se/psa</initials>
    <remark><p>Specified when to play received audio (early media); specified that DTMF must use in-band signalling (XEP-0181).</p></remark>
  </revision>
  <revision>
    <version>0.3</version>
    <date>2006-03-20</date>
    <initials>psa</initials>
    <remark><p>Defined info messages for hold and mute.</p></remark>
  </revision>
  <revision>
    <version>0.2</version>
    <date>2006-02-13</date>
    <initials>psa</initials>
    <remark><p>Defined info message for busy; added info message examples; recommended use of Speex; updated schema and XMPP Registrar considerations.</p></remark>
  </revision>
  <revision>
    <version>0.1</version>
    <date>2005-12-15</date>
    <initials>psa</initials>
    <remark><p>Initial version.</p></remark>
  </revision>
  <revision>
    <version>0.0.3</version>
    <date>2005-12-05</date>
    <initials>psa</initials>
    <remark><p>Described service discovery usage; defined initial informational messages.</p></remark>
  </revision>
  <revision>
    <version>0.0.2</version>
    <date>2005-10-27</date>
    <initials>psa</initials>
    <remark><p>Added SDP mapping, security considerations, IANA considerations, XMPP Registrar considerations, and XML schema.</p></remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2005-10-21</date>
    <initials>psa/sl</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>&xep0166; can be used to initiate and negotiate a wide range of peer-to-peer sessions. The first session type of interest is audio chat. This document specifies a format for describing Jingle audio sessions.</p>
</section1>
<section1 topic='Requirements' anchor='reqs'>
  <p>The Jingle content description format defined herein is designed to meet the following requirements:</p>
  <ol>
    <li>Enable negotiation of parameters necessary for audio chat over Realtime Transport Protocol (RTP; see &rfc3550;).</li>
    <li>Map these parameters to Session Description Protocol (SDP; see &rfc4566;) to enable interoperability.</li>
    <li>Define informational messages related to audio chat (e.g., busy and ringing).</li>
  </ol>
</section1>
<section1 topic='Content Description Format' anchor='format'>
  <p>A Jingle audio session is described by one or more encodings contained within a wrapper &lt;description/&gt; element. In the language of <cite>RFC 4566</cite> these encodings are payload-types; therefore, each &lt;payload-type/&gt; element specifies an encoding that can be used for the audio stream. In Jingle Audio, these encodings are used in the context of RTP. The most common encodings for the Audio/Video Profile (AVP) of RTP are listed in &rfc3551; (these "static" types are reserved from payload ID 0 through payload ID 96), although other encodings are allowed (these "dynamic" types use payload IDs 97 to 127) in accordance with the dynamic assignment rules described in Section 3 of <cite>RFC 3551</cite>. The 'id' attribute is REQUIRED. The 'name' attribute is RECOMMENDED for static payload types, and REQUIRED for dynamic payload types. The 'clockrate' attribute is RECOMMENDED and should specify the sampling frequency in hertz. The 'channels' attribute is RECOMMENDED and should specify the number of channels; if omitted, it MUST be assumed to contain one channel.</p>
<p>The encodings SHOULD be provided in order of preference.</p>
  <example caption="Audio Description Format"><![CDATA[
    <description xmlns='http://jabber.org/protocol/jingle/description/audio'>
      <payload-type id='18' name='G729'/>
      <payload-type id="97" name="IPCMWB"/>
      <payload-type id='98' name='L16' clockrate='16000' channels='2'/>
      <payload-type id="96" name="ISAC" clockrate="8000"/>
      <payload-type id="102" name="iLBC"/>
      <payload-type id="4" name="G723"/>
      <payload-type id="100" name="EG711U"/>
      <payload-type id="101" name="EG711A"/>
      <payload-type id="0" name="PCMU" clockrate="16000"/>
      <payload-type id="8" name="PCMA"/>
      <payload-type id="13" name="CN"/>
    </description>
  ]]></example>
  <p>The &lt;description/&gt; element is intended to be a child of a &JINGLE; element as specified in <cite>XEP-0166</cite>.</p>
  <p>When the session is provisionally accepted, as indicated by the target entity sending an empty IQ result in response to an 'initiate' message, both receiving and sending entities SHOULD start listening for audio as defined by the negotiated transport method. For interoperability with telephony systems, each entity SHOULD play any audio received at this time, before the target sends an 'accept' message.</p>
</section1>
<section1 topic='Mapping to Session Description Protocol' anchor='sdp'>
  <p>If the payload type is static (payload-type IDs 0 through 96 inclusive), it MUST be mapped to a media field defined in <cite>RFC 4566: Session Description Protocol</cite> (SDP). The generic format for the media field is as follows:</p>
  <code><![CDATA[
m=<media> <port> <transport> <fmt list>
  ]]></code>
  <p>In the context of Jingle audio sessions, the &lt;content&gt; is "audio", the &lt;port&gt; is the preferred port for such communications (which may be determined dynamically), the &lt;transport&gt; is whatever transport method is negotiated via the Jingle negotiation (e.g., "RTP/AVT"), and the &lt;fmt list&gt; is the payload-type ID.</p>
  <p>For example, consider the following static payload-type:</p>
  <example caption="Jingle Format for Static Payload-Type"><![CDATA[
<payload-type id="13" name="CN"/>
  ]]></example>
  <example caption="SDP Mapping of Static Payload-Type"><![CDATA[
m=audio 9999 RTP/AVP 13
  ]]></example>
  <p>If the payload type is dynamic (payload-type IDs 97 through 127 inclusive), it SHOULD be mapped to an SDP media field plus an SDP attribute field named "rtpmap".</p>
  <p>For example, consider a payload of 16-bit linear-encoded stereo audio sampled at 16KHz associated with dynamic payload-type 98:</p>
  <example caption="Jingle Format for Dynamic Payload-Type"><![CDATA[
<payload-type id='98' name='L16' clockrate='16000' channels='2'/>
  ]]></example>
  <example caption="SDP Mapping of Dynamic Payload-Type"><![CDATA[
m=audio 9999 RTP/AVP 98
a=rtpmap:98 L16/16000/2
  ]]></example>
</section1>
<section1 topic='Service Discovery' anchor='disco'>
  <p>If an entity supports the Jingle audio content description format, it MUST advertise that fact by returning a feature of "http://jabber.org/protocol/jingle/description/audio" in response to &xep0030; information requests.</p>
  <example caption="Service Discovery Information Request"><![CDATA[
<iq from='romeo@montague.net/orchard'
    id='disco1'
    to='juliet@capulet.com/balcony'
    type='get'>
  <query xmlns='http://jabber.org/protocol/disco#info'/>
</iq>
  ]]></example>
  <example caption="Service Discovery Information Response"><![CDATA[
<iq from='juliet@capulet.com/balcony'
    id='disco1'
    to='romeo@montague.net/orchard'
    type='result'>
  <query xmlns='http://jabber.org/protocol/disco#info'>
    ...
    <feature var='http://jabber.org/protocol/jingle'/>
    <feature var='http://jabber.org/protocol/jingle/description/audio'/>
    ...
  </query>
</iq>
  ]]></example>
</section1>
<section1 topic='Informational Messages' anchor='info'>
  <section2 topic='Format' anchor='info-format'>
    <p>Informational messages may be sent by either party within the context of Jingle to communicate the status of a Jingle audio session, device, or principal. The informational message MUST be an IQ-set containing a &JINGLE; element of type "content-info", where the informational message is a payload  element qualified by the 'http://jabber.org/protocol/jingle/info/audio' namespace; the following payload elements are defined: <note>A &lt;trying/&gt; element (equivalent to the SIP 100 Trying response code) is not necessary, since each session-level action is acknowledged via XMPP IQ semantics.</note></p>
    <table caption='Information Payload Elements'>
      <tr>
        <th>Element</th>
        <th>Meaning</th>
      </tr>
      <tr>
        <td>&lt;busy/&gt;</td>
        <td>The principal or device is currently unavailable for a session because busy with another (audio or other) session.</td>
      </tr>
      <tr>
        <td>&lt;hold/&gt;</td>
        <td>The principal is temporarily pausing the chat (i.e., putting the other party on hold).</td>
      </tr>
      <tr>
        <td>&lt;mute/&gt;</td>
        <td>The principal is temporarily stopping audio input but continues to accept audio output.</td>
      </tr>
      <tr>
        <td>&lt;queued/&gt;</td>
        <td>The audio session request is queued for pickup by the principal.</td>
      </tr>
      <tr>
        <td>&lt;ringing/&gt;</td>
        <td>The device is ringing but the principal has not yet interacted with it to answer.</td>
      </tr>
    </table>
    <p>Note: Because the informational message is sent in an IQ-set, the receiving party MUST return either an IQ-result or an IQ-error (normally only an IQ-result to acknowledge receipt; no error flows are defined or envisioned at this time).</p>
  </section2>
  <section2 topic='Examples' anchor='info-examples'>
    <example caption="Target Entity Sends Busy Message"><![CDATA[
<iq from='juliet@capulet.com/balcony'
    to='romeo@montague.net/orchard'
    id='busy1'
    type='set'>
  <jingle xmlns='http://jabber.org/protocol/jingle'
          action='content-info'
          initiator='romeo@montague.net/orchard'
          sid='a73sjjvkla37jfea'>
    <busy xmlns='http://jabber.org/protocol/jingle/info/audio'/>
  </jingle>
</iq>
    ]]></example>
    <example caption="Target Entity Sends Hold Message"><![CDATA[
<iq from='juliet@capulet.com/balcony'
    to='romeo@montague.net/orchard'
    id='hold1'
    type='set'>
  <jingle xmlns='http://jabber.org/protocol/jingle'
          action='content-info'
          initiator='romeo@montague.net/orchard'
          sid='a73sjjvkla37jfea'>
    <hold xmlns='http://jabber.org/protocol/jingle/info/audio'/>
  </jingle>
</iq>
    ]]></example>
    <example caption="Target Entity Sends Mute Message"><![CDATA[
<iq from='juliet@capulet.com/balcony'
    to='romeo@montague.net/orchard'
    id='mute1'
    type='set'>
  <jingle xmlns='http://jabber.org/protocol/jingle'
          action='content-info'
          initiator='romeo@montague.net/orchard'
          sid='a73sjjvkla37jfea'>
    <mute xmlns='http://jabber.org/protocol/jingle/info/audio'/>
  </jingle>
</iq>
    ]]></example>
    <example caption="Target Entity Sends Queued Message"><![CDATA[
<iq from='juliet@capulet.com/balcony'
    to='romeo@montague.net/orchard'
    id='queued1'
    type='set'>
  <jingle xmlns='http://jabber.org/protocol/jingle'
          action='content-info'
          initiator='romeo@montague.net/orchard'
          sid='a73sjjvkla37jfea'>
    <queued xmlns='http://jabber.org/protocol/jingle/info/audio'/>
  </jingle>
</iq>
    ]]></example>
    <example caption="Target Entity Sends Ringing Message"><![CDATA[
<iq from='juliet@capulet.com/balcony'
    to='romeo@montague.net/orchard'
    id='ringing1'
    type='set'>
  <jingle xmlns='http://jabber.org/protocol/jingle'
          action='content-info'
          initiator='romeo@montague.net/orchard'
          sid='a73sjjvkla37jfea'>
    <ringing xmlns='http://jabber.org/protocol/jingle/info/audio'/>
  </jingle>
</iq>
    ]]></example>
  </section2>
</section1>
<section1 topic='Implementation Notes' anchor='impl'>
  <section2 topic='Codecs' anchor='impl-codecs'>
    <p>Support for the Speex codec <note>See &lt;<link url='http://www.speex.org/'>http://www.speex.org/</link>&gt;.</note> is RECOMMENDED.</p>
  </section2>
  <section2 topic='DTMF' anchor='impl-dtmf'>
    <p>Support for Dual Tone Multi-Frequency (DTMF) MUST use the protocol described in &xep0181;.</p>
  </section2>
</section1>
<section1 topic='Security Considerations' anchor='security'>
  <p>The description of a format for audio sessions introduces no known security vulnerabilities.</p>
</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with &IANA;.</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <section2 topic='Protocol Namespaces' anchor='registrar-ns'>
    <p>The &REGISTRAR; shall include 'http://jabber.org/protocol/jingle/description/audio' and 'http://jabber.org/protocol/jingle/info/audio' in its registry of protocol namespaces.</p>
  </section2>
  <section2 topic='Jingle Content Description Formats' anchor='registrar-content'>
    <p>The XMPP Registrar shall include the name "audio" in its registry of Jingle content description formats. The registration is as follows:</p>
    <code><![CDATA[
<content>
  <name>audio</name>
  <desc>Jingle sessions that support audio exchanges</desc>
  <doc>XEP-0167</doc>
</content>
    ]]></code>
  </section2>
</section1>
<section1 topic='XML Schemas' anchor='schema'>
  <section2 topic='Content Description Format' anchor='schema-content'>
    <code><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='http://jabber.org/protocol/jingle/description/audio'
    xmlns='http://jabber.org/protocol/jingle/description/audio'
    elementFormDefault='qualified'>

  <xs:element name='description'>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref='payload-type' minOccurs='0' maxOccurs='unbounded'/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name='payload-type'>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base='empty'>
          <xs:attribute name='channels' type='xs:byte' use='optional' default='1'/>
          <xs:attribute name='clockrate' type='xs:short' use='optional'/>
          <xs:attribute name='id' type='xs:unsignedByte' use='required'/>
          <xs:attribute name='name' type='xs:string' use='optional'/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <xs:simpleType name='empty'>
    <xs:restriction base='xs:string'>
      <xs:enumeration value=''/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
    ]]></code>
  </section2>
  <section2 topic='Informational Messages' anchor='schema-info'>
    <code><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='http://jabber.org/protocol/jingle/info/audio'
    xmlns='http://jabber.org/protocol/jingle/info/audio'
    elementFormDefault='qualified'>

  <xs:element name='busy' type='empty'/>
  <xs:element name='hold' type='empty'/>
  <xs:element name='mute' type='empty'/>
  <xs:element name='queued' type='empty'/>
  <xs:element name='ringing' type='empty'/>

  <xs:simpleType name='empty'>
    <xs:restriction base='xs:string'>
      <xs:enumeration value=''/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
    ]]></code>
  </section2>
</section1>
</xep>
