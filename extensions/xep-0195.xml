<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>User Browsing</title>
  <abstract>This document defines an XMPP protocol extension for communicating information about the web pages a user visits.</abstract>
  &LEGALNOTICE;
  <number>0195</number>
  <status>Experimental</status>
  <type>Standards Track</type>
  <jig>Standards JIG</jig>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XMPP IM</spec>
    <spec>XEP-0060</spec>
    <spec>XEP-0163</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>browsing</shortname>
  &stpeter;
  <revision>
    <version>0.1</version>
    <date>2006-08-30</date>
    <initials>psa</initials>
    <remark><p>Initial version.</p></remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2006-08-28</date>
    <initials>psa</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>&xep0060; and &xep0163; can be used to publish a wide variety of "extended presence" information about users. This document specifies an extended presence payload format that communicates information about the web pages a user visits. This information may be of interest to a user's contacts and can also be used in social networking applications (e.g., co-browsing and web swarms).</p>
</section1>
<section1 topic='Protocol' anchor='protocol'>
  <section2 topic='Container Element and Child Elements' anchor='protocol-elements'>
    <p>Information about web pages is provided by the user (or automated integration with browsers or other systems) and is propagated on the network by the user's client. The information container for web page data is a &lt;page/&gt; element that is qualified by the 'http://jabber.org/protocol/browsing' namespace. The web page information itself is provided as the XML character data of the following children of the &lt;page/&gt; element:</p>
    <table caption='Child Elements'>
      <tr>
        <th>Element</th>
        <th>Description</th>
        <th>Example</th>
        <th>Datatype</th>
        <th>Inclusion</th>
      </tr>
      <tr>
        <td>description</td>
        <td>The value of the "description" META tag</td>
        <td>The weblog of Peter Saint-Andre</td>
        <td>xs:string</td>
        <td>OPTIONAL</td>
      </tr>
      <tr>
        <td>keywords</td>
        <td>The value of the "keywords" META tag</td>
        <td>stpeter, Peter Saint-Andre, weblog, jabber, xmpp</td>
        <td>xs:string</td>
        <td>OPTIONAL</td>
      </tr>
      <tr>
        <td>title</td>
        <td>The title of the web page (i.e., value of the &lt;title/&gt; element)</td>
        <td>one small voice</td>
        <td>xs:string</td>
        <td>OPTIONAL</td>
      </tr>
      <tr>
        <td>uri</td>
        <td>The URI of the page (usually but not necessarily an HTTP URL)</td>
        <td>http://www.saint-andre.com/blog/</td>
        <td>xs:anyURI</td>
        <td>REQUIRED</td>
      </tr>
    </table>
    <p>NOTE: The datatypes specified above are defined in &w3xmlschema2;.</p>
  </section2>
  <section2 topic='Transport Mechanism' anchor='protocol-transport'>
    <p>When a user visits a web page, its client may publish that fact to a special pubsub or PEP node (if a PEP node, the NodeID is "http://jabber.org/protocol/browsing"). The web page information SHOULD be communicated and transported by means of the <cite>XEP-0060</cite> protocol, especially the subset specified in <cite>XEP-0163</cite> (as shown in the following examples). Because browsing information is not pure presence information and can change independently of the user's availability, it SHOULD NOT be provided as an extension to the &PRESENCE; stanza type.</p>
    <example caption='User Publishes Browsing Information'><![CDATA[
<iq type='set' from='stpeter@jabber.org/work' id='browsing1'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <publish node='http://jabber.org/protocol/browsing'>
      <item id='da6abe63d1e5ed45a6de466732abff72e6fccb93'>
        <page xmlns='http://jabber.org/protocol/browsing'>
          <uri>http://www.saint-andre.com/blog/</uri>
        </page>
      </item>
    </publish>
  </pubsub>
</iq>
    ]]></example>
    <p>The browsing information is then delivered to all subscribers:</p>
    <example caption='Browsing Information is Delivered to All Subscribers'><![CDATA[
<message from='stpeter@jabber.org' to='maineboy@jabber.org'>
  <event xmlns='http://jabber.org/protocol/pubsub#event'>
    <items node='http://jabber.org/protocol/browsing'>
      <item id='da6abe63d1e5ed45a6de466732abff72e6fccb93'>
        <page xmlns='http://jabber.org/protocol/browsing'>
          <uri>http://www.saint-andre.com/blog/</uri>
        </page>
      </item>
    </items>
  </event>
</message>
.
.
.
    ]]></example>
    <p>When the user stops browsing the page (e.g., by closing the browser window or tab), the user's client SHOULD send an empty &lt;page/&gt; element to the node with the same ItemID:</p>
    <example caption='User Publishes Stop Information'><![CDATA[
<iq type='set' from='stpeter@jabber.org/work' id='browsing2'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <publish node='http://jabber.org/protocol/browsing'>
      <item id='da6abe63d1e5ed45a6de466732abff72e6fccb93'>
        <page xmlns='http://jabber.org/protocol/browsing'/>
      </item>
    </publish>
  </pubsub>
</iq>
    ]]></example>
    <example caption='Stop Information is Delivered to All Subscribers'><![CDATA[
<message from='stpeter@jabber.org' to='maineboy@jabber.org'>
  <event xmlns='http://jabber.org/protocol/pubsub#event'>
    <items node='http://jabber.org/protocol/browsing'>
      <item id='da6abe63d1e5ed45a6de466732abff72e6fccb93'>
        <page xmlns='http://jabber.org/protocol/browsing'/>
      </item>
    </items>
  </event>
</message>
.
.
.
    ]]></example>
  </section2>
</section1>
<section1 topic='Security Considerations' anchor='security'>
  <p>The web pages that a user visits may be sensitive. A client must provide a way for a user to configure which pages or types of pages will not be published (e.g., via user preferences).</p>
</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with &IANA;.</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <section2 topic='Protocol Namespaces' anchor='registrar-ns'>
    <p>The &REGISTRAR; shall include 'http://jabber.org/protocol/browsing' in its registry of protocol namespaces.</p>
  </section2>
</section1>
<section1 topic='XML Schema' anchor='schema'>
  <code><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='http://jabber.org/protocol/browsing'
    xmlns='http://jabber.org/protocol/browsing'
    elementFormDefault='qualified'>

  <xs:element name='page'>
    <xs:complexType>
      <xs:sequence minOccurs='0'>
        <xs:element name='description' type='xs:string' minOccurs='0'/>
        <xs:element name='keywords' type='xs:string' minOccurs='0'/>
        <xs:element name='title' type='xs:string' minOccurs='0'/>
        <xs:element name='uri' type='xs:anyURI'/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

</xs:schema>
  ]]></code>
</section1>
</xep>
