<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Bookmarks</title>
  <abstract>This document defines an XML data format for storing bookmarks to XMPP conference rooms and HTTP URLs.</abstract>
  &LEGALNOTICE;
  <number>0048</number>
  <status>Proposed</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XEP-0049</spec>
    <spec>XEP-0223</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>bookmarks</shortname>
  <schemaloc>
    <url>http://www.xmpp.org/schemas/bookmarks.xsd</url>
  </schemaloc>
  <author>
    <firstname>Rachel</firstname>
    <surname>Blackman</surname>
    <email>rcb@ceruleanstudios.com</email>
    <jid>sparks@jabber.org</jid>
  </author>
  &pgmillard;
  &stpeter;
  <revision>
    <version>1.1pre2</version>
    <date>in progress, last updated 2007-09-24</date>
    <initials>psa</initials>
    <remark><p>Specified use of PEP as a storage mechanism in addition to existing jabber:iq:private method.</p></remark>
  </revision>
  <revision>
    <version>1.0</version>
    <date>2003-10-08</date>
    <initials>psa</initials>
    <remark><p>Per a vote of the Jabber Council, changed status to Active; also added XML schema.</p></remark>
  </revision>
  <revision>
    <version>0.3</version>
    <date>2003-05-13</date>
    <initials>rcb</initials>
    <remark><p>Re-focused to document only the existing protocol in use.</p></remark>
  </revision>
  <revision>
    <version>0.2</version>
    <date>2002-10-03</date>
    <initials>pgm</initials>
    <remark><p>Typos, etc...</p></remark>
  </revision>
  <revision>
    <version>0.1</version>
    <date>2002-10-03</date>
    <initials>pgm</initials>
    <remark><p>Initial version.</p></remark>
  </revision>
</header>

<section1 topic='Introduction' anchor='intro'>
  <p>For ease-of-use in a Jabber client, it is desirable to have a way to store shortcuts to various services and resources (such as conference rooms and web pages) as 'bookmarks' that can be displayed in the user's client. Several Jabber clients have already agreed on and implemented a method to provide this service; that informal agreement is documented and expanded upon in this document. In particular, we introduce the 'storage' element (qualified by the 'storage:bookmarks' namespace) as a container for this sort of this data. While the &lt;storage/&gt; element can be stored using any XML storage mechanism, this document describes two such methods that are specific to XMPP.</p>
</section1>

<section1 topic='Data Format' anchor='format'>
  <p>A storage element marked by the storage:bookmarks namespace will contain a collection of child elements, each representing a 'bookmark' to be displayed in the client.  At present, only two sub-elements are defined, 'conference' for conference rooms and 'url' for normal URLs.</p>
  <p>All elements under storage MUST allow a 'name' tag, which is the friendly name by which they will be displayed in the client.  If an element lacks a 'name' tag, the client SHOULD generate an appropriate substitution based on the other available data.</p>
  <section2 topic='The conference element' anchor='format-conference'>
    <p>One of the most common uses of bookmarks will likely be to bookmark conference rooms on various Jabber servers.  It is this aspect of the bookmark system which is used today by existing clients such as Exodus <note>Exodus, see &lt;<link url='http://exodus.jabberstudio.org/'>http://exodus.jabberstudio.org/</link>&gt;.</note> and Rival Messenger <note>Rival Messenger, see &lt;<link url='http://rival.chote.net'>http://rival.chote.net/</link>&gt;.</note>.  In addition to the required 'jid' attribute, the conference element also possesses an 'autojoin' attribute, which determines whether or not the client should automatically join that conference room on login; this attribute is of type xs:boolean (see &w3xmlschema2;) and the default value is "false". &BOOLEANNOTE;</p>
    <p>The conference element MAY also contain 'nick' and 'password' sub-elements; the XML character data from these elements should be used when joining the room from the bookmark.  Password is, of course, important for joining potentially password-protected &xep0045; rooms.</p>
    <example caption='An example of the conference element'><![CDATA[
    <storage xmlns='storage:bookmarks'>
      <conference name='Council of Oberon' 
                  autojoin='true'
                  jid='council@conference.underhill.org'>
        <nick>Puck</nick>
        <password>titania</password>
      </conference>
    </storage>
    ]]></example>
   <p>This bookmark would be displayed as 'Council of Oberon' and, if activated, would attempt to join the conference room 'council@conference.underhill.org' with nickname 'Puck' and password 'titania'.  A bookmark set may contain any number of conference rooms.</p>
  </section2>
  <section2 topic='The url element' anchor='format-url'>
    <p>URLs are fairly simple, as they only need to store a URL and a title, and the client then can simply launch the appropriate browser.</p>
    <p>A URL element therefore only needs a 'url' tag in addition to the required 'name'.</p>
    <example caption='An example of the URL element'><![CDATA[
    <storage xmlns='storage:bookmarks'>
      <url name='Complete Works of Shakespeare'
           url='http://the-tech.mit.edu/Shakespeare/'/>
    </storage>
    ]]></example>
    <p>This bookmark would be displayed in the client as 'Complete Works of Shakespeare' and would take the user to <link url='http://the-tech.mit.edu/Shakespeare/'>http://the-tech.mit.edu/Shakespeare/</link> if activated.  A bookmark set can contain any number of urls.</p>
  </section2>
</section1>

<section1 topic='Storage Methods' anchor='storage'>
  <p>It is recommended to use either &xep0060; or &xep0049; in order to store the data format defined above; however, other methods could be used, such as HTTP.</p>
  <section2 topic='Publish-Subscribe' anchor='storage-pubsub'>
    <p>A client may use Publish-Subscribe (XEP-0060) for data storage, specifically through the use of personal data nodes hosted at the user's virtual publish-subscribe service as described in &xep0223;.</p>
    <section3 topic='Uploading Data' anchor='storage-pubsub-upload'>
      <example caption='Client uploads data'><![CDATA[
<iq from='juliet@capulet.lit/balcony' type='set' id='pip1'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <publish node='storage:bookmarks'>
      <item id='current'>
        <storage xmlns='storage:bookmarks'>
          <conference name='The Play&apos;s the Thing' 
                      autojoin='true'
                      jid='theplay@conference.shakespeare.lit'>
            <nick>JC</nick>
            <password>Gl0b3</password>
          </conference>
        </storage>
      </item>
    </publish>
    <publish-options>
      <x xmlns='jabber:x:data' type='submit'>
        <field var='FORM_TYPE' type='hidden'>
          <value>http://jabber.org/protocol/pubsub#publish-options</value>
        </field>
        <field var='pubsub#persist_items'>
          <value>true</value>
        </field>
        <field var='pubsub#access_model'>
          <value>whitelist</value>
        </field>
      </x>
    </publish-options>
  </pubsub>
</iq>
      ]]></example>
      <example caption='Server acknowledges successful storage'><![CDATA[
<iq to='juliet@capulet.lit/balcony' type='result' id='pip1'/>
      ]]></example>
    </section3>
    <section3 topic='Receiving Notifications' anchor='storage-pubsub-notify'>
      <p>The stored data is automatically pushed to all of the user's connected resources.</p>
      <example caption='Publisher receives event notification'><![CDATA[
<message from='juliet@capulet.lit'
         to='juliet@capulet.lit/balcony'
         type='headline'
         id='rnfoo1'>
  <event xmlns='http://jabber.org/protocol/pubsub#event'>
    <items node='storage:bookmarks'>
      <item id='current'>
        <storage xmlns='storage:bookmarks'>
          <conference name='The Play&apos;s the Thing' 
                      autojoin='true'
                      jid='theplay@conference.shakespeare.lit'>
            <nick>JC</nick>
            <password>Gl0b3</password>
          </conference>
        </storage>
      </item>
    </items>
  </event>
</message>

<message from='juliet@capulet.lit'
         to='juliet@capulet.lit/chamber'
         type='headline'
         id='rnfoo2'>
  <event xmlns='http://jabber.org/protocol/pubsub#event'>
    <items node='storage:bookmarks'>
      <item id='current'>
        <storage xmlns='storage:bookmarks'>
        <note jid='hamlet@shakespeare.lit'
              cdate='2004-09-24T15:23:21Z'
              mdate='2004-09-24T15:23:21Z'>Seems to be a good writer</note>
        <note jid='juliet@capulet.com'
              cdate='2004-09-27T17:23:14Z'
              mdate='2004-09-28T12:43:12Z'>Oh my sweetest love ...</note>
        </storage>
      </item>
    </items>
  </event>
</message>
      ]]></example>
    </section3>
    <section3 topic='Retrieving Data' anchor='storage-pubsub-retrieve'>
      <p>In order to retrieve stored data without receiving notifications (e.g., upon initial login), the user's client sends a retrieve-items request as specified in <cite>XEP-0060</cite>.</p>
      <example caption='Client requests all items'><![CDATA[
<iq from='juliet@capulet.lit/randomID' type='get' id='retrieve1'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <items node='storage:bookmarks'/>
  </pubsub>
</iq>
      ]]></example>
      <example caption='Server returns all items'><![CDATA[
<iq type='result'
    to='juliet@capulet.lit/randomID'
    id='retrieve1'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <items node='storage:bookmarks'>
      <item id='current'>
        <storage xmlns='storage:bookmarks'>
          <conference name='The Play&apos;s the Thing' 
                      autojoin='true'
                      jid='theplay@conference.shakespeare.lit'>
            <nick>JC</nick>
            <password>Gl0b3</password>
          </conference>
        </storage>
      </item>
    </items>
  </pubsub>
</iq>
      ]]></example>
    </section3>
  </section2>
  <section2 topic='Private XML Storage' anchor='storage-privatexml'>
    <p>A client may use Private Data Storage (XEP-0049) for data storage.</p>
    <section3 topic='Uploading Data' anchor='storage-privatexml-upload'>
      <example caption='Client uploads data'><![CDATA[
<iq type='set' id='a1'>
  <query xmlns='jabber:iq:private'>
    <storage xmlns='storage:bookmarks'>
      <conference name='Council of Oberon' 
                  autojoin='true'
                  jid='council@conference.underhill.org'>
        <nick>Puck</nick>
        <password>titania</password>
      </conference>
    </storage>
  </query>
</iq>
      ]]></example>
      <example caption='Server acknowledges successful storage'><![CDATA[
<iq type='result' id='priv1'/>
      ]]></example>
      <p>Note: The private XML storage protocol does not provide notifications to all connected resources, only an acknowledgement to the uploading resource.</p>
    </section3>
    <section3 topic='Retrieving Data' anchor='storage-privatexml-retrieve'>
      <example caption='Client requests stored data'><![CDATA[
<iq type='get' id='a2'>
  <query xmlns='jabber:iq:private'>
    <storage xmlns='storage:bookmarks'/>
  </query>
</iq>
      ]]></example>
      <example caption='Server returns stored data'><![CDATA[
<iq type='result' id='a2'>
  <query xmlns='jabber:iq:private'>
    <storage xmlns='storage:bookmarks'>
      <conference name='Council of Oberon' 
                  autojoin='true'
                  jid='council@conference.underhill.org'>
        <nick>Puck</nick>
        <password>titania</password>
      </conference>
    </storage>
  </query>
</iq>
      ]]></example>
    </section3>
  </section2>
</section1>

<section1 topic='Security Considerations' anchor='security'>
  <p>Security considerations related to object persistent via publish-subscribe are described in XEP-0060 and <cite>XEP-0223</cite>.</p>
  <p>Security considerations related to private XML storage are described in XEP-0049.</p>
</section1>

<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with &IANA;.</p>
</section1>

<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
    <p>No action by the &REGISTRAR; is required, since the 'storage:bookmarks' namespace is already included in the protocol namespaces registry (see &NAMESPACES;).</p>
</section1>

<section1 topic='XML Schema' anchor='registrar'>
  <code><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='storage:bookmarks'
    xmlns='storage:bookmarks'
    elementFormDefault='qualified'>

  <xs:annotation>
    <xs:documentation>
      The protocol documented by this schema is defined in
      XEP-0048: http://www.xmpp.org/extensions/xep-0048.html
    </xs:documentation>
  </xs:annotation>

  <xs:element name='storage'>
    <xs:complexType>
      <xs:choice>
        <xs:element ref='conference'/>
        <xs:element ref='url'/>
      </xs:choice>
    </xs:complexType>
  </xs:element>

  <xs:element name='conference'>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='nick' type='xs:string' minOccurs='0'/>
        <xs:element name='password' type='xs:string' minOccurs='0'/>
      </xs:sequence>
      <xs:attribute name='autojoin' type='xs:boolean' use='optional' default='false'/>
      <xs:attribute name='jid' type='xs:string' use='required'/>
      <xs:attribute name='name' type='xs:string' use='required'/>
    </xs:complexType>
  </xs:element>

  <xs:element name='url'>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base='empty'>
          <xs:attribute name='name' type='xs:string' use='required'/>
          <xs:attribute name='url' type='xs:string' use='required'/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

  <xs:simpleType name='empty'>
    <xs:restriction base='xs:string'>
      <xs:enumeration value=''/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
  ]]></code>
</section1>

<section1 topic='Author Note' anchor='authornote'>
  <p>Peter Millard, a co-author of this specification from version 0.1 through version 1.0, died on April 26, 2006.</p>
</section1>

</xep>
